package ogla.grid.gui;

import ogla.grid.util.GridManager;
import java.awt.BasicStroke;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author marcin
 */
public class GridPanel extends javax.swing.JPanel {

    protected GridManager gridManager = null;

    private void sendStrokeToGridManager(BasicStroke basicStroke) {
        if (gridManager != null) {
            gridManager.setBasicStroke(basicStroke);
            gridManager.getAxisChart().repaintChartSurface();
        }
    }

    private String toStr(float[] array) {
        StringBuilder builder = new StringBuilder();
        for (float fa : array) {
            builder.append(fa);
            builder.append(",");
        }
        builder.deleteCharAt(builder.length() - 1);
        return builder.toString();
    }

    public void createStroke(float mitter, float[] dashed, float phase, float width) {
        this.dashed = dashed;
        this.phase = phase;
        this.width = width;
        jTable1.getModel().setValueAt(toStr(dashed), 0, 1);
        jTable1.getModel().setValueAt(String.valueOf(phase), 1, 1);
        jTable1.getModel().setValueAt(String.valueOf(width), 2, 1);
        actualStroke = new BasicStroke(width, BasicStroke.CAP_BUTT, BasicStroke.JOIN_ROUND, mitter, dashed, phase);
        sendStrokeToGridManager(actualStroke);
    }
    protected BasicStroke actualStroke = new BasicStroke(1.f);
    public float[] dashed = {0.5f};
    public float phase = 0.f;
    public float width = 1.f;

    private class TableListenerImpl
            implements TableModelListener {

        public TableListenerImpl() {
            jTable1.getModel().addTableModelListener(this);
        }

        public void tableChanged(TableModelEvent e) {
            int column = e.getColumn();
            int row = e.getFirstRow();
            BasicStroke newStroke = null;
            if (jTable1.getModel().getColumnName(column).equals("Value")) {
                String sd = (String) jTable1.getModel().getValueAt(0, column);
                String spd = (String) jTable1.getModel().getValueAt(1, column);
                String swidth = (String) jTable1.getModel().getValueAt(2, column);
                String[] a = sd.split(",");
                float[] d = new float[a.length];
                for (int fa = 0; fa < a.length; fa++) {
                    d[fa] = Float.valueOf(a[fa]);
                }
                float pd = Float.valueOf(spd);
                float width = Float.valueOf(swidth);
                dashed = d;
                phase = pd;
                GridPanel.this.width = width;
                newStroke = new BasicStroke(width, BasicStroke.CAP_BUTT, BasicStroke.JOIN_ROUND, 1.f, d, pd);
            }
            if (newStroke != null) {
                actualStroke = newStroke;
                sendStrokeToGridManager(actualStroke);
            }
        }
    }

    /** Creates new form GridPanel */
    public GridPanel() {
        initComponents();
        new TableListenerImpl();
    }

    public void setGridManager(GridManager gridManager) {
        this.gridManager = gridManager;
        if (colorChooser == null) {
            colorChooser = new ColorChooser(gridManager);
        }
        sendStrokeToGridManager(actualStroke);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jCheckBox1 = new javax.swing.JCheckBox();

        setBorder(new javax.swing.border.MatteBorder(null));

        jButton1.setText("Color");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Dash", "0.5"},
                {"Phase of dash", "0"},
                {"Width", "1"}
            },
            new String [] {
                "Property", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Display text");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jCheckBox1)
                .addContainerGap(31, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jCheckBox1))
                .addGap(82, 82, 82))
        );
    }// </editor-fold>//GEN-END:initComponents
    private ColorChooser colorChooser = null;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        colorChooser.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        gridManager.displayText(jCheckBox1.isSelected());
    }//GEN-LAST:event_jCheckBox1ItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
