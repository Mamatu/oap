package ogla.axischart.gui;

import ogla.axischart.AxisChart;
import java.awt.BorderLayout;
import javax.swing.JPanel;

public class PluginFrame extends javax.swing.JFrame {

    public static interface PluginFrameListener {

        public void wasStoped();

        public void wasClosed();
    }
    private PluginFrameListener listener = null;

    private static class ThreadImpl extends Thread {

        private JPanel panel;
        private PluginFrameListener listener;

        public ThreadImpl(JPanel panel, PluginFrameListener listener) {
            this.panel = panel;
            this.listener = listener;
        }

        @Override
        public void run() {
            PluginFrame pluginFrame = new PluginFrame(this, listener);
            pluginFrame.addPanel(panel);
            pluginFrame.setVisible(true);
        }
    }

    public static void newPluginFrame(JPanel panel, PluginFrameListener listener) {
    }
    AxisChart axisChart = null;
    private Thread thread = null;

    /** Creates new form SimpleFrame */
    private PluginFrame(Thread thread, PluginFrameListener pluginFrameListener) {
        initComponents();
        this.thread = thread;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tools Frame - Analysis");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setText("stop");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(271, Short.MAX_VALUE)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if (axisChart != null) {
            axisChart.repaintChartSurface();
        }
    }//GEN-LAST:event_formWindowClosed
    private JPanel jPanel = null;

    void addPanel(JPanel jPanel) {
        this.getContentPane().removeAll();
        this.getContentPane().add(jPanel, BorderLayout.CENTER);
        jPanel.setSize(jPanel.getPreferredSize().width, jPanel.getPreferredSize().height);
        this.getContentPane().setSize(jPanel.getPreferredSize().width, jPanel.getPreferredSize().height);
        this.setSize(jPanel.getPreferredSize().width, jPanel.getPreferredSize().height);
        this.getContentPane().invalidate();
        this.getContentPane().validate();
        this.validate();
    }
    private boolean stoped = false;

    @Override
    public void dispose() {
        super.dispose();
        if (!stoped) {
            listener.wasClosed();
        }
    }

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        if (this.jPanel != null) {
            this.jPanel.setSize(this.getContentPane().getSize());
        }
    }//GEN-LAST:event_formComponentResized

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        listener.wasStoped();
        stoped = true;
        thread.stop();
    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
