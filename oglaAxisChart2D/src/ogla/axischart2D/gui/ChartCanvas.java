package ogla.axischart2D.gui;

import ogla.axischart.gui.RenameFrame;
import ogla.axischart.gui.PicturesFrame;
import ogla.axischart.lists.ListsContainer;
import ogla.axischart2D.AxisChart2D;
import ogla.axischart2D.util.Recorder.NoDirectoryException;
import ogla.axischart2D.util.Recorder.NoFormatException;
import ogla.axischart2D.util.Recorder.NoNameException;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;

/**
 *
 * @author marcin
 */
public final class ChartCanvas extends javax.swing.JPanel {

    protected AxisChart2D axisChart;
    private DefaultListModel defaultListModel = new DefaultListModel();

    /** Creates new form JChartPanel */
    public ChartCanvas(AxisChart2D axisChart, ListsContainer listsContainer) {
        initComponents();
        this.axisChart = axisChart;
        axisChart.getChartSurface().setSize(jPanel1.getPreferredSize());
        axisChart.getChartSurface().setPreferredSize(jPanel1.getPreferredSize());
        axisChart.getChartSurface().setVisible(true);
        axisChart.getChartSurface().setBackground(Color.white);
        jPanel1.add(axisChart.getChartSurface(), BorderLayout.CENTER);
        picturesFrame = new PicturesFrame(defaultListModel, axisChart, listsContainer);
        this.addKeyListener(new KeyListener() {

            public void keyTyped(KeyEvent e) {
            }

            public void keyPressed(KeyEvent e) {
            }

            public void keyReleased(KeyEvent e) {
                if (KeyEvent.VK_F5 == e.getKeyCode()) {
                    ChartCanvas.this.axisChart.getChartSurface().fullscreen();
                } else if (KeyEvent.VK_ESCAPE == e.getKeyCode()) {
                    ChartCanvas.this.axisChart.getChartSurface().returnToPreviousResolution();
                }
            }
        });
        this.revalidate();
        this.repaint();
        jLabel1.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton3 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(247, 247, 247));
        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentResized(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 628, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 283, Short.MAX_VALUE)
        );

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setText("Save as image");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);
        jToolBar1.add(jSeparator4);

        jButton2.setText("Menu");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);
        jToolBar1.add(jSeparator1);

        jButton3.setText("Record");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton7.setText("Continue");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jButton6.setText("Save");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton5.setText("Setup");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);
        jToolBar1.add(jSeparator2);

        jLabel1.setForeground(new java.awt.Color(221, 34, 34));
        jLabel1.setText("Chart is recorded");
        jToolBar1.add(jLabel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private PicturesFrame picturesFrame = null;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        picturesFrame.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    public Dimension getSizeOfMainPanel() {
        return jPanel1.getSize();
    }

    private void jPanel1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentResized
        axisChart.getChartSurface().setSize(jPanel1.getSize());
        axisChart.getChartSurface().setPreferredSize(jPanel1.getSize());
    }//GEN-LAST:event_jPanel1ComponentResized

    private class MenuPopup extends JPopupMenu {

        private JCheckBoxMenuItem item1 = new JCheckBoxMenuItem("Auto refreshing", false);
        private JCheckBoxMenuItem item2 = new JCheckBoxMenuItem("Auto adjusting", false);
        private JCheckBoxMenuItem item3 = new JCheckBoxMenuItem("Auto shifting", false);

        public MenuPopup() {
            super();
            this.add(item1);
            this.add(item2);
            this.add(item3);
            item1.addActionListener(new Item1Action());
            item2.addActionListener(new Item2Action());
            item3.addActionListener(new Item3Action());
        }

        private class Item1Action implements ActionListener {

            public void actionPerformed(ActionEvent e) {
                axisChart.setAutomaticalRefresh(item1.isSelected());
                axisChart.repaintChartSurface();
            }
        }

        private class Item2Action implements ActionListener {

            public void actionPerformed(ActionEvent e) {
                if (item2.isSelected()) {
                    axisChart.setAutomaticalShifting(false);
                    axisChart.setAutomaticalAdjusting(true);
                    item3.setSelected(false);
                } else {
                    axisChart.setAutomaticalAdjusting(false);
                }
                axisChart.repaintChartSurface();
            }
        }

        private class Item3Action implements ActionListener {

            public void actionPerformed(ActionEvent e) {
                if (item3.isSelected()) {
                    axisChart.setAutomaticalShifting(true);
                    axisChart.setAutomaticalAdjusting(false);
                    item2.setSelected(false);
                } else {
                    axisChart.setAutomaticalShifting(false);

                }
                axisChart.repaintChartSurface();
            }
        }
    }
    private MenuPopup menuPopup = new MenuPopup();

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        menuPopup.show(jButton2, 0, 0);
    }//GEN-LAST:event_jButton2ActionPerformed
    private JChartFrame chartFrame = null;
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (chartFrame == null) {
            chartFrame = new JChartFrame(axisChart.getRecorder());
        }
        chartFrame.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (!axisChart.getRecorder().isRecording()) {
            axisChart.getRecorder().start();
            jLabel1.setVisible(true);
            jButton3.setText("Stop");
        } else {
            axisChart.getRecorder().stop();
            jLabel1.setVisible(false);
            jButton3.setText("Record");
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    private class RunnableImpl implements Runnable {

        public void run() {
            try {
                axisChart.getRecorder().save();
            } catch (NoDirectoryException ex) {
                JOptionPane.showMessageDialog(ChartCanvas.this, "No choosed directory", "", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(ChartCanvas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoNameException ex) {
                JOptionPane.showMessageDialog(ChartCanvas.this, "No choosed name for files", "", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(ChartCanvas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoFormatException ex) {
                JOptionPane.showMessageDialog(ChartCanvas.this, "No choosed format for files", "", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(ChartCanvas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private class JPopup extends JPopupMenu {

        private JMenuItem item1 = new JMenuItem("to files");
        private JMenuItem item2 = new JMenuItem("to images container");
        private RenameFrame renameFrame = new RenameFrame();

        public JPopup() {
            super();
            item1.addActionListener(new ActionListener() {

                public void actionPerformed(ActionEvent e) {
                    RunnableImpl runnableImpl = new RunnableImpl();
                    Thread thread = new Thread(runnableImpl);
                    thread.start();
                }
            });

            item2.addActionListener(new ActionListener() {

                public void actionPerformed(ActionEvent e) {
                    BufferedImage[] images = axisChart.getRecorder().getImages();
                    picturesFrame.addTo(images);
                }
            });
            this.add(item1);
            this.add(item2);
        }
    }
    private JPopup popup = new JPopup();
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        popup.show(jButton6, 0, jButton6.getHeight());
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        axisChart.getRecorder().cont();
    }//GEN-LAST:event_jButton7ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
