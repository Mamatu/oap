package ogla.axis.gui;

import ogla.axis.util.AxisManager;
import java.awt.BasicStroke;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JRadioButton;

public class AxisPanel extends javax.swing.JPanel {

    protected AxisManager axisManager = null;

    private void sendStrokeToAxisManager(BasicStroke basicStroke) {
        if (axisManager != null) {
            axisManager.setBasicStroke(basicStroke);
            axisManager.getAxisChart().repaintChartSurface();
        }
    }

    private String toStr(float[] array) {
        StringBuilder builder = new StringBuilder();
        for (float fa : array) {
            builder.append(fa);
            builder.append(",");
        }
        builder.deleteCharAt(builder.length() - 1);
        return builder.toString();
    }

    public void createStroke(float mitter, float[] dashed, float phase, float width) {
        this.mitter = mitter;
        this.dashed = dashed;
        this.phase = phase;
        this.width = width;
        actualStroke = new BasicStroke(width, BasicStroke.CAP_BUTT, BasicStroke.JOIN_ROUND, mitter, dashed, phase);
        sendStrokeToAxisManager(actualStroke);
    }
    protected BasicStroke actualStroke = new BasicStroke(1.f);
    public float mitter = 1;
    public float[] dashed = {0.5f};
    public float phase = 0.f;
    public float width = 1.f;
    public static final int AXIS_X = 0;
    public static final int AXIS_Y = 1;
    private int usedAxis = 0;

    public void setInit(int typeOfAxis) {
        usedAxis = typeOfAxis;
    }

    public AxisPanel() {
        initComponents();
    }

    public void setAxisManager(AxisManager axisManager) {
        this.axisManager = axisManager;
        if (colorChooser == null) {
            colorChooser = new ColorChooser(axisManager);
        }
        sendStrokeToAxisManager(actualStroke);
        radioGroup.add(jRadioButton1, new SelectionAction() {

            public void execute() {
                jRadioButton2.setSelected(false);
                jRadioButton3.setSelected(false);
                jSpinner1.setEnabled(false);
                jSpinner2.setEnabled(false);
                AxisPanel.this.axisManager.mainLineCenterOfWindow();
            }
        });

        radioGroup.add(jRadioButton2, new SelectionAction() {

            public void execute() {
                jRadioButton1.setSelected(false);
                jRadioButton3.setSelected(false);
                jSpinner1.setEnabled(true);
                jSpinner2.setEnabled(false);

                Number n = (Number) jSpinner1.getValue();
                AxisPanel.this.axisManager.mainLinePixel(n.intValue());
            }
        });
        radioGroup.add(jRadioButton3, new SelectionAction() {

            public void execute() {
                jRadioButton2.setSelected(false);
                jRadioButton1.setSelected(false);
                jSpinner2.setEnabled(true);
                jSpinner1.setEnabled(false);
                Number n = (Number) jSpinner2.getValue();
                AxisPanel.this.axisManager.mainLineTick(n);

            }
        });

        radioGroup.setSelected(jRadioButton1);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jCheckBox2 = new javax.swing.JCheckBox();

        setBorder(new javax.swing.border.MatteBorder(null));

        jButton1.setText("Color");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Options of displaying:");

        jRadioButton1.setText("center");
        jRadioButton1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton1ItemStateChanged(evt);
            }
        });

        jRadioButton2.setText("position on window");
        jRadioButton2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton2ItemStateChanged(evt);
            }
        });

        jRadioButton3.setText("chart tick");
        jRadioButton3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton3ItemStateChanged(evt);
            }
        });

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), null, null, Float.valueOf(1.0f)));
        jSpinner2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner2StateChanged(evt);
            }
        });

        jCheckBox2.setSelected(true);
        jCheckBox2.setText("Display text");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton3)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSpinner2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jRadioButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jCheckBox2))
                .addContainerGap(128, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jRadioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    private ColorChooser colorChooser = null;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        colorChooser.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private interface SelectionAction {

        public void execute();
    }

    private class RadioGroup {

        private Map<JRadioButton, SelectionAction> map = new HashMap<JRadioButton, SelectionAction>();

        public void add(JRadioButton jRadioButton, SelectionAction selectionAction) {
            if (!map.containsKey(jRadioButton)) {
                map.put(jRadioButton, selectionAction);
            }
        }

        public void setSelected(JRadioButton r) {
            SelectionAction action = map.get(r);
            if (action != null) {
                action.execute();
            }
        }
    }
    private RadioGroup radioGroup = new RadioGroup();
    private void jRadioButton1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton1ItemStateChanged
        radioGroup.setSelected(jRadioButton1);
    }//GEN-LAST:event_jRadioButton1ItemStateChanged

    private void jRadioButton2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton2ItemStateChanged
        radioGroup.setSelected(jRadioButton2);
    }//GEN-LAST:event_jRadioButton2ItemStateChanged

    private void jRadioButton3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton3ItemStateChanged
        radioGroup.setSelected(jRadioButton3);
    }//GEN-LAST:event_jRadioButton3ItemStateChanged

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        Number n = (Number) jSpinner1.getValue();
        if (usedAxis == AXIS_X) {
            int p = n.intValue() + axisManager.axisChart.getLocation().x;
            if (p > axisManager.axisChart.getLocation().x + axisManager.axisChart.getWidth()) {
                p = axisManager.axisChart.getWidth();
            }
            axisManager.setPixel(p);
        } else {
            int p = n.intValue() + axisManager.axisChart.getLocation().y;
            if (p > axisManager.axisChart.getLocation().y + axisManager.axisChart.getHeight()) {
                p = axisManager.axisChart.getHeight();
            }
            axisManager.setPixel(p);
        }
        axisManager.axisChart.repaintChartSurface();
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jSpinner2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner2StateChanged
        Number n = (Number) jSpinner2.getValue();
        if (usedAxis == AXIS_X) {
            if (n.floatValue() < axisManager.axisChart.getXTicks().getLowestTick().floatValue()) {
                n = new Float(axisManager.axisChart.getXTicks().getLowestTick().floatValue());
            }
            if (n.floatValue() > axisManager.axisChart.getXTicks().getGreatestTick().floatValue()) {
                n = new Float(axisManager.axisChart.getXTicks().getGreatestTick().floatValue());
            }
        } else {
            if (n.floatValue() < axisManager.axisChart.getYTicks().getLowestTick().floatValue()) {
                n = new Float(axisManager.axisChart.getYTicks().getLowestTick().floatValue());
            }
            if (n.floatValue() > axisManager.axisChart.getYTicks().getGreatestTick().floatValue()) {
                n = new Float(axisManager.axisChart.getYTicks().getGreatestTick().floatValue());
            }
        }
        axisManager.setTick(n);
        axisManager.axisChart.repaintChartSurface();
    }//GEN-LAST:event_jSpinner2StateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    // End of variables declaration//GEN-END:variables
}
